/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { ClaimWeek, ClaimWeekInterface } from "../ClaimWeek";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_weeklyReward",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weeksClaimed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getWeekNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastClaimedWeek",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weeklyReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610f93380380610f938339818101604052810190610032919061014e565b818310610074576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161006b906101fe565b60405180910390fd5b4283116100b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ad9061026a565b60405180910390fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600181905550816002819055508060038190555050505061028a565b600080fd5b6000819050919050565b61012b81610118565b811461013657600080fd5b50565b60008151905061014881610122565b92915050565b60008060006060848603121561016757610166610113565b5b600061017586828701610139565b935050602061018686828701610139565b925050604061019786828701610139565b9150509250925092565b600082825260208201905092915050565b7f737461727454696d65206d757374206265206265666f726520656e6454696d65600082015250565b60006101e86020836101a1565b91506101f3826101b2565b602082019050919050565b60006020820190508181036000830152610217816101db565b9050919050565b7f737461727454696d65206d75737420626520696e207468652066757475726500600082015250565b6000610254601f836101a1565b915061025f8261021e565b602082019050919050565b6000602082019050818103600083015261028381610247565b9050919050565b610cfa806102996000396000f3fe60806040526004361061007f5760003560e01c806378e979251161004e57806378e97925146101335780638cbe096e1461015e5780638da5cb5b1461019b578063da0adedf146101c657610086565b80631bfca4df1461008b5780632e1a7d4d146100c85780633197cbb6146100f15780634e71d92d1461011c57610086565b3661008657005b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad91906106d9565b6101f1565b6040516100bf919061071f565b60405180910390f35b3480156100d457600080fd5b506100ef60048036038101906100ea9190610766565b610209565b005b3480156100fd57600080fd5b50610106610301565b604051610113919061071f565b60405180910390f35b34801561012857600080fd5b50610131610307565b005b34801561013f57600080fd5b506101486105d1565b604051610155919061071f565b60405180910390f35b34801561016a57600080fd5b5061018560048036038101906101809190610766565b6105d7565b604051610192919061071f565b60405180910390f35b3480156101a757600080fd5b506101b061064c565b6040516101bd91906107a2565b60405180910390f35b3480156101d257600080fd5b506101db610670565b6040516101e8919061071f565b60405180910390f35b60046020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610297576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028e9061081a565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156102fd573d6000803e3d6000fd5b5050565b60025481565b60015442101561034c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034390610886565b60405180910390fd5b6002544210610390576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610387906108f2565b60405180910390fd5b600061039b426105d7565b90506000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110610423576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041a90610984565b60405180910390fd5b6000818361043191906109d3565b905082600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600354826104879190610a07565b9050804710156104cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c390610a95565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff16826040516104f290610ae6565b60006040518083038185875af1925050503d806000811461052f576040519150601f19603f3d011682016040523d82523d6000602084013e610534565b606091505b5050905080610578576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056f90610b47565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f9cdcf2f7714cca3508c7f0110b04a90a80a3a8dd0e35de99689db74d28c5383e8484426040516105c293929190610b67565b60405180910390a25050505050565b60015481565b6000600154821161061d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061490610c10565b60405180910390fd5b600162093a806001548461063191906109d3565b61063b9190610c5f565b6106459190610c90565b9050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106a68261067b565b9050919050565b6106b68161069b565b81146106c157600080fd5b50565b6000813590506106d3816106ad565b92915050565b6000602082840312156106ef576106ee610676565b5b60006106fd848285016106c4565b91505092915050565b6000819050919050565b61071981610706565b82525050565b60006020820190506107346000830184610710565b92915050565b61074381610706565b811461074e57600080fd5b50565b6000813590506107608161073a565b92915050565b60006020828403121561077c5761077b610676565b5b600061078a84828501610751565b91505092915050565b61079c8161069b565b82525050565b60006020820190506107b76000830184610793565b92915050565b600082825260208201905092915050565b7f426f742074686520636f6e7472616374206f776e657200000000000000000000600082015250565b60006108046016836107bd565b915061080f826107ce565b602082019050919050565b60006020820190508181036000830152610833816107f7565b9050919050565b7f436c61696d696e6720686173206e6f7420737461727465642079657400000000600082015250565b6000610870601c836107bd565b915061087b8261083a565b602082019050919050565b6000602082019050818103600083015261089f81610863565b9050919050565b7f436c61696d696e6720706572696f642068617320656e64656400000000000000600082015250565b60006108dc6019836107bd565b91506108e7826108a6565b602082019050919050565b6000602082019050818103600083015261090b816108cf565b9050919050565b7f416c726561647920636c61696d656420666f72207468652063757272656e742060008201527f7765656b00000000000000000000000000000000000000000000000000000000602082015250565b600061096e6024836107bd565b915061097982610912565b604082019050919050565b6000602082019050818103600083015261099d81610961565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109de82610706565b91506109e983610706565b9250828203905081811115610a0157610a006109a4565b5b92915050565b6000610a1282610706565b9150610a1d83610706565b9250828202610a2b81610706565b91508282048414831517610a4257610a416109a4565b5b5092915050565b7f496e73756666696369656e7420636f6e74726163742062616c616e6365000000600082015250565b6000610a7f601d836107bd565b9150610a8a82610a49565b602082019050919050565b60006020820190508181036000830152610aae81610a72565b9050919050565b600081905092915050565b50565b6000610ad0600083610ab5565b9150610adb82610ac0565b600082019050919050565b6000610af182610ac3565b9150819050919050565b7f526577617264207472616e73666572206661696c656400000000000000000000600082015250565b6000610b316016836107bd565b9150610b3c82610afb565b602082019050919050565b60006020820190508181036000830152610b6081610b24565b9050919050565b6000606082019050610b7c6000830186610710565b610b896020830185610710565b610b966040830184610710565b949350505050565b7f74696d657374616d70206d757374206265206265666f7265207374617274546960008201527f6d65000000000000000000000000000000000000000000000000000000000000602082015250565b6000610bfa6022836107bd565b9150610c0582610b9e565b604082019050919050565b60006020820190508181036000830152610c2981610bed565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c6a82610706565b9150610c7583610706565b925082610c8557610c84610c30565b5b828204905092915050565b6000610c9b82610706565b9150610ca683610706565b9250828201905080821115610cbe57610cbd6109a4565b5b9291505056fea264697066735822122049663d76008b19808ff6f5335956136ebff16a2f0a083cfaca479ec028c0152864736f6c634300081b0033";

type ClaimWeekConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClaimWeekConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ClaimWeek__factory extends ContractFactory {
  constructor(...args: ClaimWeekConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _startTime: BigNumberish,
    _endTime: BigNumberish,
    _weeklyReward: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _startTime,
      _endTime,
      _weeklyReward,
      overrides || {}
    );
  }
  override deploy(
    _startTime: BigNumberish,
    _endTime: BigNumberish,
    _weeklyReward: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _startTime,
      _endTime,
      _weeklyReward,
      overrides || {}
    ) as Promise<
      ClaimWeek & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ClaimWeek__factory {
    return super.connect(runner) as ClaimWeek__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClaimWeekInterface {
    return new Interface(_abi) as ClaimWeekInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ClaimWeek {
    return new Contract(address, _abi, runner) as unknown as ClaimWeek;
  }
}
